{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/types/schemas.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport const GenerateCustomChallengeInputSchema = z.object({\n    resume: z\n      .string()\n      .describe(\"The candidate's resume text.\"),\n    jobTitle: z.string().describe('The job title for which the candidate is being evaluated.'),\n  });\n  \n  export const GenerateCustomChallengeOutputSchema = z.object({\n    challengeDescription: z\n      .string()\n      .describe('A detailed description of the coding challenge, tailored to the candidate.'),\n    requiredSkills: z.string().describe('A comma seperated list of the required skills for the challenge'),\n    setupInstructions: z.string().describe('Instructions on how to setup the project in vscode.dev'),\n  });\n\n  export const PromptChallengeCreationInputSchema = z.object({\n    prompt: z.string().describe('The prompt for creating a coding challenge.'),\n  });\n  \n  export const PromptChallengeCreationOutputSchema = z.object({\n    challengeDescription: z\n      .string()\n      .describe('The detailed description of the coding challenge.'),\n    setupInstructions: z\n      .string()\n      .describe('Instructions for setting up the coding environment in VSCode.dev.'),\n    expectedOutput: z\n      .string()\n      .describe('The expected output or solution for the challenge.'),\n  });\n"],"names":[],"mappings":";;;;;;AACA;;AAEO,MAAM,qCAAqC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvD,QAAQ,oIAAA,CAAA,IAAC,CACN,MAAM,GACN,QAAQ,CAAC;IACZ,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAEO,MAAM,sCAAsC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1D,sBAAsB,oIAAA,CAAA,IAAC,CACpB,MAAM,GACN,QAAQ,CAAC;IACZ,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACzC;AAEO,MAAM,qCAAqC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzD,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAEO,MAAM,sCAAsC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1D,sBAAsB,oIAAA,CAAA,IAAC,CACpB,MAAM,GACN,QAAQ,CAAC;IACZ,mBAAmB,oIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;IACZ,gBAAgB,oIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;AACd","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/ai/flows/generate-custom-challenge.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Automatically generates coding challenges tailored to a candidate's resume and job title.\n *\n * - generateCustomChallenge - A function that handles the generation of custom coding challenges.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport { GenerateCustomChallengeInputSchema, GenerateCustomChallengeOutputSchema } from '@/types/schemas';\nimport { GenerateCustomChallengeInput, GenerateCustomChallengeOutput } from '@/types';\n\n\nexport async function generateCustomChallenge(\n  input: GenerateCustomChallengeInput\n): Promise<GenerateCustomChallengeOutput> {\n  return generateCustomChallengeFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateCustomChallengePrompt',\n  input: {schema: GenerateCustomChallengeInputSchema},\n  output: {schema: GenerateCustomChallengeOutputSchema},\n  prompt: `You are an expert in creating coding challenges for technical interviews. Given a candidate's resume and the job title they are applying for, create a coding challenge that assesses their skills and abilities.\n\nResume: {{{resume}}}\nJob Title: {{{jobTitle}}}\n\nConsider the candidate's skills and experience when designing the challenge. The challenge should be relevant to the job title and should assess the candidate's ability to solve problems, write clean code, and communicate their solutions effectively. Provide setup instructions for vscode.dev\n\nOutput the challenge description, required skills, and setup instructions in JSON format.  The required skills should be comma seperated.\n`,\n});\n\nconst generateCustomChallengeFlow = ai.defineFlow(\n  {\n    name: 'generateCustomChallengeFlow',\n    inputSchema: GenerateCustomChallengeInputSchema,\n    outputSchema: GenerateCustomChallengeOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;CAIC,GAED;AAEA;;;;;;AAIO,eAAe,wBACpB,KAAmC;IAEnC,OAAO,4BAA4B;AACrC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ,uHAAA,CAAA,qCAAkC;IAAA;IAClD,QAAQ;QAAC,QAAQ,uHAAA,CAAA,sCAAmC;IAAA;IACpD,QAAQ,CAAC;;;;;;;;AAQX,CAAC;AACD;AAEA,MAAM,8BAA8B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/C;IACE,MAAM;IACN,aAAa,uHAAA,CAAA,qCAAkC;IAC/C,cAAc,uHAAA,CAAA,sCAAmC;AACnD,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA9BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/ai/flows/prompt-challenge-creation.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview AI agent to allow interviewers to prompt specific coding challenges.\n *\n * - promptChallengeCreation - A function that handles the challenge creation process based on a prompt.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport { PromptChallengeCreationInputSchema, PromptChallengeCreationOutputSchema } from '@/types/schemas';\nimport { PromptChallengeCreationInput, PromptChallengeCreationOutput } from '@/types';\n\n\nexport async function promptChallengeCreation(\n  input: PromptChallengeCreationInput\n): Promise<PromptChallengeCreationOutput> {\n  return promptChallengeCreationFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'promptChallengeCreationPrompt',\n  input: {schema: PromptChallengeCreationInputSchema},\n  output: {schema: PromptChallengeCreationOutputSchema},\n  prompt: `You are an expert coding challenge designer. An interviewer has requested a challenge based on the prompt below. Your job is to generate a detailed coding challenge description, instructions for setting up the coding environment in VSCode.dev, and the expected output or solution for the challenge.\n\nPrompt: {{{prompt}}}`,\n});\n\nconst promptChallengeCreationFlow = ai.defineFlow(\n  {\n    name: 'promptChallengeCreationFlow',\n    inputSchema: PromptChallengeCreationInputSchema,\n    outputSchema: PromptChallengeCreationOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;CAIC,GAED;AAEA;;;;;;AAIO,eAAe,wBACpB,KAAmC;IAEnC,OAAO,4BAA4B;AACrC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ,uHAAA,CAAA,qCAAkC;IAAA;IAClD,QAAQ;QAAC,QAAQ,uHAAA,CAAA,sCAAmC;IAAA;IACpD,QAAQ,CAAC;;oBAES,CAAC;AACrB;AAEA,MAAM,8BAA8B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/C;IACE,MAAM;IACN,aAAa,uHAAA,CAAA,qCAAkC;IAC/C,cAAc,uHAAA,CAAA,sCAAmC;AACnD,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport const CustomChallengeFormSchema = z.object({\n    candidateName: z\n      .string()\n      .min(2, { message: \"Name must be at least 2 characters.\" }),\n    candidateEmail: z.string().email({ message: \"Please enter a valid email.\" }),\n    jobTitle: z\n      .string()\n      .min(2, { message: \"Job title must be at least 2 characters.\" }),\n    resume: z\n      .string()\n      .min(100, { message: \"Resume must be at least 100 characters.\" }),\n  });\n  \n  export const PromptChallengeFormSchema = z.object({\n    prompt: z\n      .string()\n      .min(20, { message: \"Prompt must be at least 20 characters.\" }),\n  });\n"],"names":[],"mappings":";;;;AACA;;AAEO,MAAM,4BAA4B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,eAAe,oIAAA,CAAA,IAAC,CACb,MAAM,GACN,GAAG,CAAC,GAAG;QAAE,SAAS;IAAsC;IAC3D,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAA8B;IAC1E,UAAU,oIAAA,CAAA,IAAC,CACR,MAAM,GACN,GAAG,CAAC,GAAG;QAAE,SAAS;IAA2C;IAChE,QAAQ,oIAAA,CAAA,IAAC,CACN,MAAM,GACN,GAAG,CAAC,KAAK;QAAE,SAAS;IAA0C;AACnE;AAEO,MAAM,4BAA4B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,QAAQ,oIAAA,CAAA,IAAC,CACN,MAAM,GACN,GAAG,CAAC,IAAI;QAAE,SAAS;IAAyC;AACjE","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/firebase/server.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\n\nlet firebaseAdminApp: admin.app.App | null = null;\n\nfunction initializeFirebaseAdmin() {\n  // If the app is already initialized, do nothing.\n  if (admin.apps.length > 0) {\n    firebaseAdminApp = admin.app();\n    return;\n  }\n\n  // --- Add these checks ---\n  if (!admin || !admin.INTERNAL) {\n    console.error(\"Firebase Admin SDK not loaded correctly. 'admin' or 'admin.INTERNAL' is undefined.\");\n    // Depending on how critical this is, you might throw an error here\n    // or just return and let the getFirebaseAdmin() handle the uninitialized state.\n    return;\n  }\n  // --- End of checks ---\n\n\n  // Use individual environment variables for reliability.\n  const projectId = process.env.FIREBASE_PROJECT_ID;\n  // Get the private key string directly - expect actual newlines in the env var\n  const privateKey = process.env.FIREBASE_PRIVATE_KEY;\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;\n\n  if (!projectId || !privateKey || !clientEmail) {\n    console.error('Firebase Admin SDK environment variables (FIREBASE_PROJECT_ID, FIREBASE_PRIVATE_KEY, FIREBASE_CLIENT_EMAIL) are not set. Please check your .env.local file.');\n    return;\n  }\n\n  try {\n    // Pass the private key string directly, assuming it has actual newlines\n    firebaseAdminApp = admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: projectId as string, // Add type assertion\n        privateKey: privateKey, // Pass the private key string directly\n        clientEmail: clientEmail as string, // Add type assertion\n      }),\n    });\n\n    console.log(\"Firebase Admin SDK initialized successfully!\"); // Add this log\n\n\n  } catch (e: any) {\n    console.error('Firebase Admin SDK initialization from individual variables failed. Error:', e.message);\n    console.error('Full error object:', e); // Log the full error object\n    throw new Error('Firebase Admin SDK initialization failed. Check server logs for details.');\n  }\n}\n\n// Initialize on module load.\ninitializeFirebaseAdmin();\n\nexport function getFirebaseAdmin() {\n  if (!firebaseAdminApp) {\n    console.log(\"Firebase Admin App not initialized. Attempting re-initialization...\");\n    initializeFirebaseAdmin();\n    if (!firebaseAdminApp) {\n      throw new Error(\"Firebase Admin SDK is not initialized. Check your environment variables and server logs.\");\n    }\n  }\n\n  return {\n    auth: admin.auth(firebaseAdminApp),\n    db: admin.firestore(firebaseAdminApp)\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,mBAAyC;AAE7C,SAAS;IACP,iDAAiD;IACjD,IAAI,4HAAM,IAAI,CAAC,MAAM,GAAG,GAAG;QACzB,mBAAmB,4HAAM,GAAG;QAC5B;IACF;IAEA,2BAA2B;IAC3B,IAAI,CAAC,+HAAS,CAAC,4HAAM,QAAQ,EAAE;QAC7B,QAAQ,KAAK,CAAC;QACd,mEAAmE;QACnE,gFAAgF;QAChF;IACF;IACA,wBAAwB;IAGxB,wDAAwD;IACxD,MAAM,YAAY,QAAQ,GAAG,CAAC,mBAAmB;IACjD,8EAA8E;IAC9E,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB;IACnD,MAAM,cAAc,QAAQ,GAAG,CAAC,qBAAqB;IAErD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa;QAC7C,QAAQ,KAAK,CAAC;QACd;IACF;IAEA,IAAI;QACF,wEAAwE;QACxE,mBAAmB,4HAAM,aAAa,CAAC;YACrC,YAAY,4HAAM,UAAU,CAAC,IAAI,CAAC;gBAChC,WAAW;gBACX,YAAY;gBACZ,aAAa;YACf;QACF;QAEA,QAAQ,GAAG,CAAC,iDAAiD,eAAe;IAG9E,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,8EAA8E,EAAE,OAAO;QACrG,QAAQ,KAAK,CAAC,sBAAsB,IAAI,4BAA4B;QACpE,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,6BAA6B;AAC7B;AAEO,SAAS;IACd,IAAI,CAAC,kBAAkB;QACrB,QAAQ,GAAG,CAAC;QACZ;QACA,IAAI,CAAC,kBAAkB;YACrB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,OAAO;QACL,MAAM,4HAAM,IAAI,CAAC;QACjB,IAAI,4HAAM,SAAS,CAAC;IACtB;AACF","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/email.ts"],"sourcesContent":["\n'use server';\n\nimport { getFirebaseAdmin } from './firebase/server';\n\ninterface MailOptions {\n  to: string;\n  subject: string;\n  text: string;\n  html: string;\n}\n\nasync function sendEmail(mailOptions: MailOptions) {\n  const { db } = getFirebaseAdmin();\n  const fromEmail = process.env.SMTP_FROM_EMAIL;\n\n  if (!fromEmail) {\n    console.error('SMTP_FROM_EMAIL is not configured. Cannot send email.');\n    // In a real app, you might want to throw an error or handle this more gracefully\n    return;\n  }\n  \n  const mailCollection = db.collection('mail');\n  try {\n    await mailCollection.add({\n      to: [mailOptions.to],\n      message: {\n        subject: mailOptions.subject,\n        text: mailOptions.text,\n        html: mailOptions.html,\n      },\n      from: `\"CodeAlchemist\" <${fromEmail}>`,\n    });\n  } catch (error) {\n     console.error('Failed to write email document to Firestore:', error);\n     throw new Error('Failed to queue email for sending.');\n  }\n}\n\nexport async function sendPendingApprovalEmail(userEmail: string, userName: string) {\n  const mailOptions: MailOptions = {\n    to: userEmail,\n    subject: 'Your CodeAlchemist Account is Pending Approval',\n    text: `Hi ${userName},\\n\\nThank you for signing up for CodeAlchemist. Your account is currently pending approval from an administrator. You will receive another email once your account has been activated.\\n\\nBest,\\nThe CodeAlchemist Team`,\n    html: `<p>Hi ${userName},</p><p>Thank you for signing up for CodeAlchemist. Your account is currently pending approval from an administrator. You will receive another email once your account has been activated.</p><p>Best,<br/>The CodeAlchemist Team</p>`,\n  };\n  await sendEmail(mailOptions);\n}\n\nexport async function sendNewUserAdminNotification(adminEmail: string, newUserName: string, newUserEmail: string) {\n  const mailOptions: MailOptions = {\n    to: adminEmail,\n    subject: 'New User Needs Approval',\n    text: `A new user has signed up and requires approval.\\n\\nName: ${newUserName}\\nEmail: ${newUserEmail}\\n\\nPlease visit the user management dashboard to approve or deny their request.`,\n    html: `<p>A new user has signed up and requires approval.</p><ul><li><strong>Name:</strong> ${newUserName}</li><li><strong>Email:</strong> ${newUserEmail}</li></ul><p>Please visit the user management dashboard to approve or deny their request.</p>`,\n  };\n  await sendEmail(mailOptions);\n}\n\nexport async function sendApprovalConfirmationEmail(userEmail: string, userName: string) {\n    const mailOptions: MailOptions = {\n        to: userEmail,\n        subject: 'Your CodeAlchemist Account is Approved!',\n        text: `Hi ${userName},\\n\\nYour CodeAlchemist account has been approved! You can now log in and access all the features.\\n\\nBest,\\nThe CodeAlchemist Team`,\n        html: `<p>Hi ${userName},</p><p>Your CodeAlchemist account has been approved! You can now log in and access all the features.</p><p>Best,<br/>The CodeAlchemist Team</p>`,\n    };\n    await sendEmail(mailOptions);\n}\n"],"names":[],"mappings":";;;;;;;AAGA;;;;;AASA,eAAe,UAAU,WAAwB;IAC/C,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD;IAC9B,MAAM,YAAY,QAAQ,GAAG,CAAC,eAAe;IAE7C,IAAI,CAAC,WAAW;QACd,QAAQ,KAAK,CAAC;QACd,iFAAiF;QACjF;IACF;IAEA,MAAM,iBAAiB,GAAG,UAAU,CAAC;IACrC,IAAI;QACF,MAAM,eAAe,GAAG,CAAC;YACvB,IAAI;gBAAC,YAAY,EAAE;aAAC;YACpB,SAAS;gBACP,SAAS,YAAY,OAAO;gBAC5B,MAAM,YAAY,IAAI;gBACtB,MAAM,YAAY,IAAI;YACxB;YACA,MAAM,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;QACxC;IACF,EAAE,OAAO,OAAO;QACb,QAAQ,KAAK,CAAC,gDAAgD;QAC9D,MAAM,IAAI,MAAM;IACnB;AACF;AAEO,eAAe,yBAAyB,SAAiB,EAAE,QAAgB;IAChF,MAAM,cAA2B;QAC/B,IAAI;QACJ,SAAS;QACT,MAAM,CAAC,GAAG,EAAE,SAAS,wNAAwN,CAAC;QAC9O,MAAM,CAAC,MAAM,EAAE,SAAS,qOAAqO,CAAC;IAChQ;IACA,MAAM,UAAU;AAClB;AAEO,eAAe,6BAA6B,UAAkB,EAAE,WAAmB,EAAE,YAAoB;IAC9G,MAAM,cAA2B;QAC/B,IAAI;QACJ,SAAS;QACT,MAAM,CAAC,yDAAyD,EAAE,YAAY,SAAS,EAAE,aAAa,gFAAgF,CAAC;QACvL,MAAM,CAAC,qFAAqF,EAAE,YAAY,iCAAiC,EAAE,aAAa,6FAA6F,CAAC;IAC1P;IACA,MAAM,UAAU;AAClB;AAEO,eAAe,8BAA8B,SAAiB,EAAE,QAAgB;IACnF,MAAM,cAA2B;QAC7B,IAAI;QACJ,SAAS;QACT,MAAM,CAAC,GAAG,EAAE,SAAS,mIAAmI,CAAC;QACzJ,MAAM,CAAC,MAAM,EAAE,SAAS,gJAAgJ,CAAC;IAC7K;IACA,MAAM,UAAU;AACpB;;;IA5BsB;IAUA;IAUA;;AApBA,+OAAA;AAUA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  data: z.infer<typeof CustomChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = CustomChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const { candidateName, candidateEmail, jobTitle, resume } = validatedData.data;\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/.next-internal/server/app/challenges-dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {clearSession as '004d765f8ee33ffd20dce0c1206a246e29d9cc85b7'} from 'ACTIONS_MODULE0'\nexport {extendSession as '00fdc8afa6f9a1b3d43114ccecda30d103e9996acb'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/app/challenges-dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/challenges-dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/challenges-dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/app/challenges-dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/challenges-dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/challenges-dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA","debugId":null}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}