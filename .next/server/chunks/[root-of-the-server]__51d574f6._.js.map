{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/firebase/server.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\n\nlet firebaseAdminApp: admin.app.App | null = null;\n\nfunction initializeFirebaseAdmin() {\n  // If the app is already initialized, do nothing.\n  if (admin.apps.length > 0) {\n    firebaseAdminApp = admin.app();\n    return;\n  }\n\n  // --- Add these checks ---\n  if (!admin || !admin.INTERNAL) {\n    console.error(\"Firebase Admin SDK not loaded correctly. 'admin' or 'admin.INTERNAL' is undefined.\");\n    // Depending on how critical this is, you might throw an error here\n    // or just return and let the getFirebaseAdmin() handle the uninitialized state.\n    return;\n  }\n  // --- End of checks ---\n\n\n  // Use individual environment variables for reliability.\n  const projectId = process.env.FIREBASE_PROJECT_ID;\n  // Get the private key string directly - expect actual newlines in the env var\n  const privateKey = process.env.FIREBASE_PRIVATE_KEY;\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;\n\n  if (!projectId || !privateKey || !clientEmail) {\n    console.error('Firebase Admin SDK environment variables (FIREBASE_PROJECT_ID, FIREBASE_PRIVATE_KEY, FIREBASE_CLIENT_EMAIL) are not set. Please check your .env.local file.');\n    return;\n  }\n\n  try {\n    // Pass the private key string directly, assuming it has actual newlines\n    firebaseAdminApp = admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: projectId as string, // Add type assertion\n        privateKey: privateKey, // Pass the private key string directly\n        clientEmail: clientEmail as string, // Add type assertion\n      }),\n    });\n\n    console.log(\"Firebase Admin SDK initialized successfully!\"); // Add this log\n\n\n  } catch (e: any) {\n    console.error('Firebase Admin SDK initialization from individual variables failed. Error:', e.message);\n    console.error('Full error object:', e); // Log the full error object\n    throw new Error('Firebase Admin SDK initialization failed. Check server logs for details.');\n  }\n}\n\n// Initialize on module load.\ninitializeFirebaseAdmin();\n\nexport function getFirebaseAdmin() {\n  if (!firebaseAdminApp) {\n    console.log(\"Firebase Admin App not initialized. Attempting re-initialization...\");\n    initializeFirebaseAdmin();\n    if (!firebaseAdminApp) {\n      throw new Error(\"Firebase Admin SDK is not initialized. Check your environment variables and server logs.\");\n    }\n  }\n\n  return {\n    auth: admin.auth(firebaseAdminApp),\n    db: admin.firestore(firebaseAdminApp)\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,mBAAyC;AAE7C,SAAS;IACP,iDAAiD;IACjD,IAAI,4HAAM,IAAI,CAAC,MAAM,GAAG,GAAG;QACzB,mBAAmB,4HAAM,GAAG;QAC5B;IACF;IAEA,2BAA2B;IAC3B,IAAI,CAAC,+HAAS,CAAC,4HAAM,QAAQ,EAAE;QAC7B,QAAQ,KAAK,CAAC;QACd,mEAAmE;QACnE,gFAAgF;QAChF;IACF;IACA,wBAAwB;IAGxB,wDAAwD;IACxD,MAAM,YAAY,QAAQ,GAAG,CAAC,mBAAmB;IACjD,8EAA8E;IAC9E,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB;IACnD,MAAM,cAAc,QAAQ,GAAG,CAAC,qBAAqB;IAErD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa;QAC7C,QAAQ,KAAK,CAAC;QACd;IACF;IAEA,IAAI;QACF,wEAAwE;QACxE,mBAAmB,4HAAM,aAAa,CAAC;YACrC,YAAY,4HAAM,UAAU,CAAC,IAAI,CAAC;gBAChC,WAAW;gBACX,YAAY;gBACZ,aAAa;YACf;QACF;QAEA,QAAQ,GAAG,CAAC,iDAAiD,eAAe;IAG9E,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,8EAA8E,EAAE,OAAO;QACrG,QAAQ,KAAK,CAAC,sBAAsB,IAAI,4BAA4B;QACpE,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,6BAA6B;AAC7B;AAEO,SAAS;IACd,IAAI,CAAC,kBAAkB;QACrB,QAAQ,GAAG,CAAC;QACZ;QACA,IAAI,CAAC,kBAAkB;YACrB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,OAAO;QACL,MAAM,4HAAM,IAAI,CAAC;QACjB,IAAI,4HAAM,SAAS,CAAC;IACtB;AACF","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/app/api/auth/verify/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { getFirebaseAdmin } from '@/lib/firebase/server';\n\nexport async function GET(request: NextRequest) {\n  const sessionCookieName = 'codealchemist-session';\n  const cookie = request.cookies.get(sessionCookieName);\n\n  if (!cookie?.value) {\n    return NextResponse.json({ isAuthenticated: false }, { status: 401 });\n  }\n\n  try {\n    const { auth } = getFirebaseAdmin();\n    await auth.verifySessionCookie(cookie.value, true);\n    return NextResponse.json({ isAuthenticated: true }, { status: 200 });\n  } catch (error) {\n    // Session cookie is invalid or expired.\n    return NextResponse.json({ isAuthenticated: false }, { status: 401 });\n  }\n}\n"],"names":[],"mappings":";;;AACA;AAEA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,MAAM,oBAAoB;IAC1B,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEnC,IAAI,CAAC,QAAQ,OAAO;QAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,iBAAiB;QAAM,GAAG;YAAE,QAAQ;QAAI;IACrE;IAEA,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;QAChC,MAAM,KAAK,mBAAmB,CAAC,OAAO,KAAK,EAAE;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,iBAAiB;QAAK,GAAG;YAAE,QAAQ;QAAI;IACpE,EAAE,OAAO,OAAO;QACd,wCAAwC;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,iBAAiB;QAAM,GAAG;YAAE,QAAQ;QAAI;IACrE;AACF","debugId":null}}]
}