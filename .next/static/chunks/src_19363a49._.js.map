{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/session-warning-modal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\n\ninterface SessionWarningModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onExtendSession: () => void;\n  onLogout: () => void;\n}\n\nexport const SessionWarningModal: React.FC<SessionWarningModalProps> = ({\n  isOpen,\n  onClose,\n  onExtendSession,\n  onLogout,\n}) => {\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}> {/* Use onOpenChange to handle closing by clicking outside */}\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Session Expiration Warning</DialogTitle>\n          <DialogDescription>\n            Your session will expire in one minute. Please extend your session to continue.\n          </DialogDescription>\n        </DialogHeader>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onLogout}>Logout</Button>\n          <Button onClick={onExtendSession}>Extend Session</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAoBO,MAAM,sBAA0D,CAAC,EACtE,MAAM,EACN,OAAO,EACP,eAAe,EACf,QAAQ,EACT;IACC,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;;YAAS;0BAC3C,6LAAC,qIAAA,CAAA,gBAAa;;kCACZ,6LAAC,qIAAA,CAAA,eAAY;;0CACX,6LAAC,qIAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,6LAAC,qIAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAIrB,6LAAC,qIAAA,CAAA,eAAY;;0CACX,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,SAAS;0CAAU;;;;;;0CAC7C,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;0CAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAK5C;KAtBa","debugId":null}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAgIsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA2KsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/context/app-context.tsx"],"sourcesContent":["'use client';\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { SessionWarningModal } from '@/components/session-warning-modal';\nimport { useRouter } from 'next/navigation';\nimport { clearSession, extendSession as backendExtendSession } from '@/lib/actions'; // Assuming extendSession action exists\n\ntype User = {\n  id: string | null;\n  email: string | null;\n  // Add other user properties you might need\n};\n\ntype AppContextType = {\n  user: User | null;\n};\n\nconst AppContext = createContext<AppContextType>({ user: null });\n\n// Session timeout in minutes\nconst SESSION_TIMEOUT_MINUTES = 60;\n// Warning time before timeout in minutes\nconst WARNING_TIME_MINUTES = 1; // 59 minutes mark\n\nexport function AppProvider({ children, user }: { children: React.ReactNode, user: User | null }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const router = useRouter();\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const warningTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const startSessionTimer = () => {\n    // Clear any existing timers\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    if (warningTimeoutRef.current) clearTimeout(warningTimeoutRef.current);\n\n    // Set timeout for the warning modal (e.g., 59 minutes)\n    const warningTime = (SESSION_TIMEOUT_MINUTES - WARNING_TIME_MINUTES) * 60 * 1000;\n    warningTimeoutRef.current = setTimeout(() => {\n      setIsModalOpen(true);\n    }, warningTime);\n\n    // Set timeout for automatic logout (e.g., 60 minutes)\n    const timeout = SESSION_TIMEOUT_MINUTES * 60 * 1000;\n    timeoutRef.current = setTimeout(() => {\n      handleLogout(); // Automatically log out after timeout\n    }, timeout);\n  };\n\n  const resetSessionTimer = () => {\n    // Reset timers when user interacts or session is extended\n     console.log('Resetting session timer'); // Debugging\n    startSessionTimer();\n  };\n\n  const handleExtendSession = async () => {\n    try {\n      // Call your backend action to extend the session (get a new ID token)\n      const result = await backendExtendSession(); // Assuming this action exists and refreshes the session cookie\n      if (result.success) {\n         console.log('Session extended successfully'); // Debugging\n        setIsModalOpen(false);\n        resetSessionTimer(); // Reset timer on successful extension\n      } else {\n         console.error('Failed to extend session:', result.error); // Debugging\n        // If extending fails, maybe log out or show an error\n         handleLogout();\n      }\n    } catch (error) {\n      console.error('Error extending session:', error); // Debugging\n       handleLogout();\n    }\n  };\n\n  const handleLogout = async () => {\n     console.log('Logging out...'); // Debugging\n    // Clear session cookie and redirect to login\n    await clearSession();\n    router.push('/login');\n    setIsModalOpen(false);\n     // Clear timers on logout\n     if (timeoutRef.current) clearTimeout(timeoutRefRef.current);\n     if (warningTimeoutRef.current) clearTimeout(warningTimeoutRef.current);\n  };\n\n  useEffect(() => {\n    // Start the timer when the user is logged in (user object is not null)\n    if (user && user.id) {\n        console.log('User logged in, starting session timer'); // Debugging\n      startSessionTimer();\n    } else {\n        // Clear timers if user logs out or is not logged in\n        console.log('User not logged in, clearing session timers'); // Debugging\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        if (warningTimeoutRef.current) clearTimeout(warningTimeoutRef.current);\n    }\n\n    // Cleanup timers on component unmount\n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n      if (warningTimeoutRef.current) clearTimeout(warningTimeoutRef.current);\n    };\n  }, [user]); // Restart timer when user changes\n\n    // Optional: Add event listeners for user activity to reset the timer\n    useEffect(() => {\n        const handleActivity = () => {\n            if (user && user.id && !isModalOpen) { // Only reset if user is logged in and modal is not open\n                resetSessionTimer();\n            }\n        };\n\n        window.addEventListener('mousemove', handleActivity);\n        window.addEventListener('keydown', handleActivity);\n        window.addEventListener('click', handleActivity);\n\n        return () => {\n            window.removeEventListener('mousemove', handleActivity);\n            window.removeEventListener('keydown', handleActivity);\n            window.removeEventListener('click', handleActivity);\n        };\n    }, [user, isModalOpen]); // Re-attach listeners if user or modal state changes\n\n  return (\n    <AppContext.Provider value={{ user }}>\n      {children}\n      <SessionWarningModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onExtendSession={handleExtendSession}\n        onLogout={handleLogout}\n      />\n    </AppContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  return useContext(AppContext);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1151, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1288, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1327, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1545, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmBsB,8BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAsFsB,gCAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1577, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAqHsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1593, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAoIsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1609, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport { cookies } from \"next/headers\";\nimport {\n  generateCustomChallenge,\n  GenerateCustomChallengeInput,\n} from \"@/ai/flows/generate-custom-challenge\";\nimport {\n  promptChallengeCreation,\n} from \"@/ai/flows/prompt-challenge-creation\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema } from \"@/lib/schemas\";\nimport { getFirebaseAdmin } from \"./firebase/server\";\nimport type { UserProfile } from \"@/types\";\nimport { sendApprovalConfirmationEmail } from \"./email\";\n\nconst sessionCookieName = 'codealchemist-session';\n\nexport async function createCustomChallengeAction(\n  formData: FormData // Accept FormData directly\n) {\n  const { db } = getFirebaseAdmin();\n\n  // Extract data from FormData\n  const candidateName = formData.get('candidateName') as string;\n  const candidateEmail = formData.get('candidateEmail') as string;\n  const jobTitle = formData.get('jobTitle') as string;\n  const resumeFile = formData.get('resumeFile') as File | null; // Get the file\n  const resumeText = formData.get('resumeText') as string | null; // Get resume text if provided\n\n  // Basic validation (you might want more robust validation)\n  if (!candidateName || !candidateEmail || !jobTitle || (!resumeFile && !resumeText)) {\n      throw new Error(\"Missing required form data.\");\n  }\n\n  let resumeContent = '';\n\n  if (resumeFile) {\n      // **TODO: Implement actual resume file upload to storage**\n      // Example: Upload resumeFile to Firebase Storage and get a download URL\n      console.log(`Handling resume file upload: ${resumeFile.name}, type: ${resumeFile.type}, size: ${resumeFile.size} bytes`);\n\n      // Placeholder for file upload logic\n      // const resumeUrl = await uploadFileToStorage(resumeFile);\n      // resumeContent = `[Resume uploaded: ${resumeUrl}]`; // Or store the URL\n       resumeContent = `[Resume file: ${resumeFile.name}]`; // Placeholder\n\n      // **TODO: Extract text from the resume file if needed for AI flow**\n       // For now, we'll just use a placeholder or rely on resumeText if provided\n       if (resumeText) {\n            resumeContent = resumeText; // Use text if provided\n       }\n\n  } else if (resumeText) {\n       resumeContent = resumeText;\n  }\n\n  if (!resumeContent) {\n       throw new Error(\"Resume content is missing.\");\n  }\n\n  const aiInput: GenerateCustomChallengeInput = { jobTitle, resume: resumeContent };\n  const result = await generateCustomChallenge(aiInput);\n\n  const newChallenge = {\n    candidateName,\n    candidateEmail,\n    jobTitle,\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n     // **TODO: Store resume file URL or reference in the challenge document**\n     // resumeUrl: resumeUrl, \n  };\n\n  try {\n     await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n     console.error(\"Error adding document: \", e);\n     throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function createPromptedChallengeAction(\n  data: z.infer<typeof PromptChallengeFormSchema>\n) {\n  const { db } = getFirebaseAdmin();\n  const validatedData = PromptChallengeFormSchema.safeParse(data);\n  if (!validatedData.success) {\n    throw new Error(\"Invalid form data.\");\n  }\n\n  const result = await promptChallengeCreation(validatedData.data);\n\n  const newChallenge = {\n    // Assuming a generic challenge or tied to a req\n    candidateName: \"N/A (Prompted)\",\n    candidateEmail: \"N/A\",\n    jobTitle: \"Prompted Challenge\",\n    ...result,\n    status: \"Pending\",\n    createdAt: new Date(),\n  };\n  \n  try {\n    await db.collection(\"challenges\").add(newChallenge);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw new Error(\"Could not save challenge to database.\");\n  }\n\n  return result;\n}\n\nexport async function setSession(idToken: string) {\n  const { auth } = getFirebaseAdmin();\n  const expiresIn = 60 * 60 * 24 * 5 * 1000; // 5 days\n  const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn });\n  cookies().set(sessionCookieName, sessionCookie, {\n    maxAge: expiresIn,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n  });\n}\n\nexport async function clearSession() {\n  cookies().delete(sessionCookieName);\n}\n\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    const { db } = getFirebaseAdmin();\n    const usersSnapshot = await db.collection('users').orderBy('createdAt', 'desc').get();\n    const users: UserProfile[] = [];\n    usersSnapshot.forEach(doc => {\n        const data = doc.data();\n        const createdAt = data.createdAt.toDate ? data.createdAt.toDate() : new Date(data.createdAt._seconds * 1000);\n        users.push({\n            ...data,\n            createdAt: createdAt,\n        } as UserProfile);\n    });\n    return users;\n}\n\nexport async function approveUser(uid: string): Promise<{ success: boolean; error?: string }> {\n    const { db } = getFirebaseAdmin();\n    try {\n        const userRef = db.collection('users').doc(uid);\n        const userDoc = await userRef.get();\n        if (!userDoc.exists) {\n            return { success: false, error: 'User not found.' };\n        }\n        const userData = userDoc.data() as UserProfile;\n\n        await userRef.update({\n            status: 'active',\n            role: 'user',\n        });\n        \n        await sendApprovalConfirmationEmail(userData.email, userData.name);\n        \n        return { success: true };\n    } catch (error: any) {\n        console.error('Error approving user:', error);\n        return { success: false, error: 'An unexpected error occurred during approval.' };\n    }\n}\n\nexport async function extendSession(): Promise<{ success: boolean; error?: string }> {\n  const { auth } = getFirebaseAdmin();\n  const sessionCookie = cookies().get(sessionCookieName)?.value;\n\n  if (!sessionCookie) {\n    return { success: false, error: 'No session cookie found.' };\n  }\n\n  try {\n    // Verify the session cookie and get the user's UID\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n    const uid = decodedClaims.uid;\n\n    // **TODO: Implement session refreshing logic**\n    // This is a placeholder. You might need to get a new ID token using a refresh token\n    // stored on the server, or re-mint the session cookie based on your setup.\n    console.log('Extending session for user:', uid);\n\n    // For demonstration, re-minting the session cookie with the existing ID token\n    // This might not be the most secure or robust way to extend a session in production.\n    // Consider using refresh tokens or other mechanisms provided by Firebase Auth.\n    const expiresIn = 60 * 60 * 24 * 5 * 1000; // Renew for 5 days\n    const newSessionCookie = await auth.createSessionCookie(sessionCookie, { expiresIn }); // Using old session cookie to create new one (check Firebase docs for best practice)\n\n     cookies().set(sessionCookieName, newSessionCookie, {\n      maxAge: expiresIn,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n    });\n\n    return { success: true };\n  } catch (error: any) {\n    console.error('Error extending session:', error);\n    cookies().delete(sessionCookieName); // Clear cookie on error\n    return { success: false, error: error.message || 'Failed to extend session.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmJsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1663, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from \"zod\";\n\nexport const CustomChallengeFormSchema = z.object({\n    candidateName: z\n      .string()\n      .min(2, { message: \"Name must be at least 2 characters.\" }),\n    candidateEmail: z.string().email({ message: \"Please enter a valid email.\" }),\n    jobTitle: z\n      .string()\n      .min(2, { message: \"Job title must be at least 2 characters.\" }),\n    resume: z\n      .string()\n      .min(100, { message: \"Resume must be at least 100 characters.\" }),\n  });\n  \n  export const PromptChallengeFormSchema = z.object({\n    prompt: z\n      .string()\n      .min(20, { message: \"Prompt must be at least 20 characters.\" }),\n  });\n"],"names":[],"mappings":";;;;AACA;;AAEO,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,eAAe,uIAAA,CAAA,IAAC,CACb,MAAM,GACN,GAAG,CAAC,GAAG;QAAE,SAAS;IAAsC;IAC3D,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QAAE,SAAS;IAA8B;IAC1E,UAAU,uIAAA,CAAA,IAAC,CACR,MAAM,GACN,GAAG,CAAC,GAAG;QAAE,SAAS;IAA2C;IAChE,QAAQ,uIAAA,CAAA,IAAC,CACN,MAAM,GACN,GAAG,CAAC,KAAK;QAAE,SAAS;IAA0C;AACnE;AAEO,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,QAAQ,uIAAA,CAAA,IAAC,CACN,MAAM,GACN,GAAG,CAAC,IAAI;QAAE,SAAS;IAAyC;AACjE","debugId":null}},
    {"offset": {"line": 1697, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1745, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/challenge-result-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ChallengeResult } from \"@/types\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ExternalLink, Copy } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ChallengeResultDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  result: ChallengeResult | null;\n}\n\nexport function ChallengeResultDialog({\n  isOpen,\n  setIsOpen,\n  result,\n}: ChallengeResultDialogProps) {\n  const { toast } = useToast();\n\n  if (!result) return null;\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    toast({\n      title: \"Copied to clipboard!\",\n    });\n  };\n\n  const isCustomChallenge = \"requiredSkills\" in result;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent className=\"sm:max-w-2xl max-h-[90vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle className=\"font-headline text-2xl\">\n            Challenge Generated Successfully!\n          </DialogTitle>\n          <DialogDescription>\n            Review the details below. A repository will be created for the candidate.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"flex-1 overflow-y-auto pr-2 space-y-6 py-4\">\n          <div>\n            <h3 className=\"font-semibold text-lg mb-2\">Challenge Description</h3>\n            <p className=\"text-muted-foreground whitespace-pre-wrap\">\n              {result.challengeDescription}\n            </p>\n          </div>\n          \n          {isCustomChallenge && 'requiredSkills' in result && (\n            <div>\n              <h3 className=\"font-semibold text-lg mb-2\">Required Skills</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {result.requiredSkills.split(\",\").map((skill) => (\n                  <Badge key={skill} variant=\"secondary\">\n                    {skill.trim()}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div>\n            <h3 className=\"font-semibold text-lg mb-2\">Setup Instructions (for VSCode.dev)</h3>\n            <div className=\"relative rounded-md bg-muted p-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"absolute top-2 right-2 h-7 w-7\"\n                onClick={() => copyToClipboard(result.setupInstructions)}\n              >\n                <Copy className=\"h-4 w-4\" />\n              </Button>\n              <pre className=\"text-sm text-muted-foreground whitespace-pre-wrap font-code\">\n                <code>{result.setupInstructions}</code>\n              </pre>\n            </div>\n          </div>\n          \n          {'expectedOutput' in result && (\n             <div>\n               <h3 className=\"font-semibold text-lg mb-2\">Expected Output</h3>\n               <div className=\"relative rounded-md bg-muted p-4\">\n                 <Button\n                   variant=\"ghost\"\n                   size=\"icon\"\n                   className=\"absolute top-2 right-2 h-7 w-7\"\n                   onClick={() => copyToClipboard(result.expectedOutput)}\n                 >\n                   <Copy className=\"h-4 w-4\" />\n                 </Button>\n                 <pre className=\"text-sm text-muted-foreground whitespace-pre-wrap font-code\">\n                   <code>{result.expectedOutput}</code>\n                 </pre>\n               </div>\n             </div>\n           )}\n        </div>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={() => setIsOpen(false)}>\n            Close\n          </Button>\n          <Button>\n            <ExternalLink className=\"mr-2 h-4 w-4\" />\n            Open in VSCode.dev\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAQA;AACA;AACA;AAAA;AACA;;;AAdA;;;;;;AAsBO,SAAS,sBAAsB,EACpC,MAAM,EACN,SAAS,EACT,MAAM,EACqB;;IAC3B,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,kBAAkB,CAAC;QACvB,UAAU,SAAS,CAAC,SAAS,CAAC;QAC9B,MAAM;YACJ,OAAO;QACT;IACF;IAEA,MAAM,oBAAoB,oBAAoB;IAE9C,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;sCAAyB;;;;;;sCAGhD,6LAAC,qIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAIrB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAE,WAAU;8CACV,OAAO,oBAAoB;;;;;;;;;;;;wBAI/B,qBAAqB,oBAAoB,wBACxC,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;8CACZ,OAAO,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,sBACrC,6LAAC,oIAAA,CAAA,QAAK;4CAAa,SAAQ;sDACxB,MAAM,IAAI;2CADD;;;;;;;;;;;;;;;;sCAQpB,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,qIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,gBAAgB,OAAO,iBAAiB;sDAEvD,cAAA,6LAAC,qMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;;;;;;sDAElB,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;0DAAM,OAAO,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;wBAKpC,oBAAoB,wBAClB,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,qIAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,gBAAgB,OAAO,cAAc;sDAEpD,cAAA,6LAAC,qMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;;;;;;sDAElB,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;0DAAM,OAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAMvC,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,SAAS,IAAM,UAAU;sCAAQ;;;;;;sCAG3D,6LAAC,qIAAA,CAAA,SAAM;;8CACL,6LAAC,yNAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAOrD;GAlGgB;;QAKI,+HAAA,CAAA,WAAQ;;;KALZ","debugId":null}},
    {"offset": {"line": 2041, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/create-challenge-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport type { z } from \"zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  createCustomChallengeAction,\n  createPromptedChallengeAction,\n  createManualChallengeAction, // New action\n} from \"@/lib/actions\";\nimport { CustomChallengeFormSchema, PromptChallengeFormSchema, ManualChallengeFormSchema } from \"@/lib/schemas\"; // New schema\nimport { Loader2, PlusCircle, MinusCircle } from \"lucide-react\";\nimport type { ChallengeResult, CustomChallengeResult, PromptedChallengeResult } from \"@/types\";\nimport { ChallengeResultDialog } from \"./challenge-result-dialog\";\n\n// Define a type for touch points/flags\ninterface TouchPoint {\n    id: string;\n    description: string;\n}\n\nexport function CreateChallengeDialog() {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState<ChallengeResult | null>(null);\n  const [isResultOpen, setIsResultOpen] = useState(false);\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [touchPoints, setTouchPoints] = useState<TouchPoint[]>([]);\n  const [newTouchPointDescription, setNewTouchPointDescription] = useState('');\n  const { toast } = useToast();\n\n  const customForm = useForm<z.infer<typeof CustomChallengeFormSchema>>({\n    resolver: zodResolver(CustomChallengeFormSchema),\n    defaultValues: {\n      candidateName: \"\",\n      candidateEmail: \"\",\n      jobTitle: \"\",\n      resume: \"\", // This will now be handled via file upload\n    },\n  });\n\n  const promptForm = useForm<z.infer<typeof PromptChallengeFormSchema>>({\n    resolver: zodResolver(PromptChallengeFormSchema),\n    defaultValues: {\n      prompt: \"\",\n    },\n  });\n\n  // Define schema and form for manual challenge\n  const manualForm = useForm<z.infer<typeof ManualChallengeFormSchema>>({\n      resolver: zodResolver(ManualChallengeFormSchema),\n      defaultValues: {\n          title: '',\n          description: '',\n          requirements: '',\n          setupInstructions: '',\n          // touchPoints: [] // Will be handled separately\n      }\n  })\n\n  const handleResumeFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.[0];\n      setResumeFile(file || null);\n  };\n\n  const handleAddTouchPoint = () => {\n      if (newTouchPointDescription.trim() !== '') {\n          setTouchPoints([...touchPoints, { id: Date.now().toString(), description: newTouchPointDescription }]);\n          setNewTouchPointDescription('');\n      }\n  };\n\n   const handleRemoveTouchPoint = (id: string) => {\n      setTouchPoints(touchPoints.filter(tp => tp.id !== id));\n  };\n\n\n  async function onCustomSubmit(values: z.infer<typeof CustomChallengeFormSchema>) {\n    setIsLoading(true);\n    \n    // **TODO: Handle resume file upload and pass necessary data to the action**\n    console.log('Submitting custom challenge form with file:', resumeFile);\n    \n    // For now, we will use the text area value as a fallback or for testing without file upload backend\n    const resumeContent = resumeFile ? '[Resume File Uploaded]' : values.resume; // Use a placeholder or actual extracted text if possible\n\n    try {\n      // Modify the action call to include resume file data or URL after upload\n      const challengeResult = await createCustomChallengeAction({ \n          ...values,\n           resume: resumeContent,\n      });\n      setResult(challengeResult);\n      setIsResultOpen(true);\n      setOpen(false);\n      customForm.reset();\n      setResumeFile(null); // Clear file input\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error creating challenge\",\n        description: \"An unexpected error occurred. Please try again.\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  async function onPromptSubmit(values: z.infer<typeof PromptChallengeFormSchema>) {\n    setIsLoading(true);\n    try {\n      const challengeResult = await createPromptedChallengeAction(values);\n      setResult(challengeResult);\n      setIsResultOpen(true);\n      setOpen(false);\n      promptForm.reset();\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error creating challenge\",\n        description: \"An unexpected error occurred. Please try again.\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  async function onManualSubmit(values: z.infer<typeof ManualChallengeFormSchema>) {\n      setIsLoading(true);\n      // Include touch points in the submission data\n      const challengeData = { ...values, touchPoints };\n      console.log('Submitting manual challenge:', challengeData);\n      \n       try {\n          // **TODO: Call the backend action to create manual challenge**\n           const challengeResult = await createManualChallengeAction(challengeData); // Assuming this action exists\n            setResult(challengeResult);\n            setIsResultOpen(true);\n            setOpen(false);\n            manualForm.reset();\n            setTouchPoints([]); // Clear touch points\n\n       } catch (error) {\n           toast({\n              variant: \"destructive\",\n              title: \"Error creating manual challenge\",\n              description: \"An unexpected error occurred. Please try again.\",\n           });\n       } finally {\n          setIsLoading(false);\n       }\n  }\n\n  return (\n    <>\n      <Dialog open={open} onOpenChange={setOpen}>\n        <DialogTrigger asChild>\n          <Button>\n            <PlusCircle className=\"mr-2 h-4 w-4\" />\n            Create Challenge\n          </Button>\n        </DialogTrigger>\n        <DialogContent className=\"sm:max-w-[625px]\">\n          <DialogHeader>\n            <DialogTitle>Create New Challenge</DialogTitle>\n            <DialogDescription>\n              Generate a coding challenge using one of the methods below.\n            </DialogDescription>\n          </DialogHeader>\n          <Tabs defaultValue=\"custom\">\n            <TabsList className=\"grid w-full grid-cols-3\"> {/* Increased grid columns */}\n              <TabsTrigger value=\"custom\">Custom from Resume</TabsTrigger>\n              <TabsTrigger value=\"prompt\">From Prompt</TabsTrigger>\n              <TabsTrigger value=\"manual\">Manual</TabsTrigger> {/* New tab */}\n            </TabsList>\n            <TabsContent value=\"custom\">\n              <Form {...customForm}>\n                <form onSubmit={customForm.handleSubmit(onCustomSubmit)} className=\"space-y-4 py-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <FormField\n                      control={customForm.control}\n                      name=\"candidateName\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Candidate Name</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"John Doe\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={customForm.control}\n                      name=\"candidateEmail\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Candidate Email</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"john.doe@example.com\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  <FormField\n                    control={customForm.control}\n                    name=\"jobTitle\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Job Title</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"Senior Software Engineer\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                   <FormItem>\n                      <FormLabel>Candidate's Resume</FormLabel>\n                      <FormControl>\n                         <Input type=\"file\" accept=\".pdf,.doc,.docx\" onChange={handleResumeFileChange} />\n                      </FormControl>\n                       {resumeFile && <p className=\"text-sm text-muted-foreground\">Selected file: {resumeFile.name}</p>}\n                      <FormMessage />\n                  </FormItem>\n                   <FormField\n                    control={customForm.control}\n                    name=\"resume\"\n                     render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Or Paste Resume Text (Optional)</FormLabel>\n                        <FormControl>\n                          <Textarea placeholder=\"Paste resume text here...\" className=\"min-h-[150px]\" {...field} disabled={!!resumeFile} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <Button type=\"submit\" className=\"w-full\" disabled={isLoading || (!resumeFile && !customForm.getValues('resume'))}>\n                    {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Generate Custom Challenge\n                  </Button>\n                </form>\n              </Form>\n            </TabsContent>\n            <TabsContent value=\"prompt\">\n              <Form {...promptForm}>\n                <form onSubmit={promptForm.handleSubmit(onPromptSubmit)} className=\"space-y-4 py-4\">\n                  <FormField\n                    control={promptForm.control}\n                    name=\"prompt\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Challenge Prompt</FormLabel>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"e.g., 'Create a simple API endpoint that fetches data from a public API and caches the result.'\"\n                            className=\"min-h-[200px]\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                    {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Generate from Prompt\n                  </Button>\n                </form>\n              </Form>\n            </TabsContent>\n             <TabsContent value=\"manual\"> {/* New Manual Challenge Tab */}\n                 <Form {...manualForm}>\n                    <form onSubmit={manualForm.handleSubmit(onManualSubmit)} className=\"space-y-4 py-4\">\n                        <FormField\n                          control={manualForm.control}\n                          name=\"title\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Challenge Title</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"e.g., Build a Todo App\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                         <FormField\n                          control={manualForm.control}\n                          name=\"description\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Description</FormLabel>\n                              <FormControl>\n                                <Textarea placeholder=\"Provide a brief description of the challenge.\" className=\"min-h-[100px]\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                         <FormField\n                          control={manualForm.control}\n                          name=\"requirements\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Requirements</FormLabel>\n                              <FormControl>\n                                <Textarea placeholder=\"List the requirements for completing the challenge.\" className=\"min-h-[100px]\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                         <FormField\n                          control={manualForm.control}\n                          name=\"setupInstructions\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Setup Instructions</FormLabel>\n                              <FormControl>\n                                <Textarea placeholder=\"Provide instructions on how to set up the challenge environment.\" className=\"min-h-[100px]\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        {/* Touch Points/Flags Section */}\n                        <div>\n                            <Label>Touch Points / Flags</Label>\n                            <div className=\"flex items-center gap-2 mt-2\">\n                                <Input\n                                    placeholder=\"Add a touch point description...\"\n                                    value={newTouchPointDescription}\n                                    onChange={(e) => setNewTouchPointDescription(e.target.value)}\n                                    onKeyPress={(e) => { if (e.key === 'Enter') { handleAddTouchPoint(); } }}\n                                />\n                                <Button type=\"button\" onClick={handleAddTouchPoint} disabled={!newTouchPointDescription.trim()}>Add</Button>\n                            </div>\n                             <div className=\"mt-2 space-y-2\">\n                                {touchPoints.map((tp) => (\n                                    <div key={tp.id} className=\"flex items-center justify-between bg-gray-100 dark:bg-gray-700 p-2 rounded\">\n                                        <span>{tp.description}</span>\n                                        <Button variant=\"ghost\" size=\"sm\" onClick={() => handleRemoveTouchPoint(tp.id)}>\n                                            <MinusCircle className=\"h-4 w-4 text-red-500\" />\n                                        </Button>\n                                    </div>\n                                ))}\n                             </div>\n                        </div>\n\n                        <Button type=\"submit\" className=\"w-full\" disabled={isLoading || !manualForm.formState.isValid}>\n                           {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                           Create Manual Challenge\n                        </Button>\n                    </form>\n                 </Form>\n            </TabsContent>\n          </Tabs>\n        </DialogContent>\n      </Dialog>\n      {result && (\n        <ChallengeResultDialog\n          isOpen={isResultOpen}\n          setIsOpen={setIsResultOpen}\n          result={result}\n        />\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3005, "column": 0}, "map": {"version":3,"sources":["file:///home/user/oddball-tech-challenge/src/components/header.tsx"],"sourcesContent":["\"use client\";\n\nimport { User } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { CreateChallengeDialog } from '@/components/create-challenge-dialog';\n// import { SidebarTrigger } from '@/components/ui/sidebar'; // Removed\nimport { useAuth } from '@/context/app-context';\nimport { clearSession } from '@/lib/actions';\nimport { useRouter, usePathname } from 'next/navigation'; // Import usePathname\nimport Link from 'next/link';\nimport { cn } from '@/lib/utils'; // Assuming cn utility exists for conditional classnames\n\nexport default function Header() {\n    const { user } = useAuth();\n    const router = useRouter();\n    const pathname = usePathname(); // Get current pathname\n\n    const handleLogout = async () => {\n        await clearSession();\n        router.push('/login');\n    }\n\n     const navLinks = [\n        { href: '/', label: 'Home' }, // Assuming '/' is your home page\n        { href: '/dashboard', label: 'Dashboard' },\n        { href: '/profile', label: 'Profile' },\n        { href: '/challenges-dashboard', label: 'Challenges' },\n        // Add other top-level navigation links here\n     ];\n\n  return (\n    <header className=\"sticky top-0 z-30 flex h-16 w-full items-center border-b bg-background/95 px-4 backdrop-blur supports-[backdrop-filter]:bg-background/60 md:px-6\">\n      <div className=\"flex items-center gap-4\">\n        {/* Add your logo or site title here */}\n        <span className=\"font-headline text-lg font-bold\">Oddball Tech Challenge</span>\n        {/* Top Navigation Links */}\n        <nav className=\"hidden md:flex items-center space-x-4 lg:space-x-6\">\n          {navLinks.map((link) => (\n            <Link key={link.href} href={link.href} className={cn(\n                \"transition-colors hover:text-foreground/80\",\n                pathname === link.href ? \"text-foreground\" : \"text-foreground/60\"\n            )}>\n                {link.label}\n            </Link>\n          ))}\n        </nav>\n      </div>\n\n      <div className=\"flex flex-1 items-center justify-end space-x-2 md:space-x-4\">\n        <CreateChallengeDialog />\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"relative h-9 w-9 rounded-full\">\n              <User className=\"h-5 w-5\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n            <DropdownMenuLabel className=\"font-normal\">\n              <div className=\"flex flex-col space-y-1\">\n                <p className=\"text-sm font-medium leading-none\">Interviewer</p>\n                <p className=\"text-xs leading-none text-muted-foreground\">\n                  {user?.email || 'Loading...'}\n                </p>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n             <Link href=\"/profile\" passHref>\n                <DropdownMenuItem>Profile</DropdownMenuItem>\n             </Link>\n            <DropdownMenuItem>Settings</DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={handleLogout}>Logout</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAQA;AACA,uEAAuE;AACvE;AACA;AACA,4OAA0D,qBAAqB;AAC/E;AACA,8MAAkC,wDAAwD;;;AAlB1F;;;;;;;;;;AAoBe,SAAS;;IACpB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,UAAO,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD,KAAK,uBAAuB;IAEvD,MAAM,eAAe;QACjB,MAAM,CAAA,GAAA,qJAAA,CAAA,eAAY,AAAD;QACjB,OAAO,IAAI,CAAC;IAChB;IAEC,MAAM,WAAW;QACd;YAAE,MAAM;YAAK,OAAO;QAAO;QAC3B;YAAE,MAAM;YAAc,OAAO;QAAY;QACzC;YAAE,MAAM;YAAY,OAAO;QAAU;QACrC;YAAE,MAAM;YAAyB,OAAO;QAAa;KAEvD;IAEJ,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAK,WAAU;kCAAkC;;;;;;kCAElD,6LAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;gCAAiB,MAAM,KAAK,IAAI;gCAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAC/C,8CACA,aAAa,KAAK,IAAI,GAAG,oBAAoB;0CAE5C,KAAK,KAAK;+BAJJ,KAAK,IAAI;;;;;;;;;;;;;;;;0BAU1B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,sJAAA,CAAA,wBAAqB;;;;;kCACtB,6LAAC,+IAAA,CAAA,eAAY;;0CACX,6LAAC,+IAAA,CAAA,sBAAmB;gCAAC,OAAO;0CAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAQ,WAAU;8CAChC,cAAA,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;;;;;;;;;;;0CAGpB,6LAAC,+IAAA,CAAA,sBAAmB;gCAAC,WAAU;gCAAO,OAAM;gCAAM,UAAU;;kDAC1D,6LAAC,+IAAA,CAAA,oBAAiB;wCAAC,WAAU;kDAC3B,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAmC;;;;;;8DAChD,6LAAC;oDAAE,WAAU;8DACV,MAAM,SAAS;;;;;;;;;;;;;;;;;kDAItB,6LAAC,+IAAA,CAAA,wBAAqB;;;;;kDACrB,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAW,QAAQ;kDAC3B,cAAA,6LAAC,+IAAA,CAAA,mBAAgB;sDAAC;;;;;;;;;;;kDAEtB,6LAAC,+IAAA,CAAA,mBAAgB;kDAAC;;;;;;kDAClB,6LAAC,+IAAA,CAAA,wBAAqB;;;;;kDACtB,6LAAC,+IAAA,CAAA,mBAAgB;wCAAC,SAAS;kDAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMrD;GAjEwB;;QACH,oIAAA,CAAA,UAAO;QACT,qIAAA,CAAA,YAAS;QACP,qIAAA,CAAA,cAAW;;;KAHR","debugId":null}}]
}